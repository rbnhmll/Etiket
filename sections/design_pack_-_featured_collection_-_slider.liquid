{%- comment -%}
{
  "pack_name": "Featured collection - slider",
  "pack_author": "Design Packs"
}
{%- endcomment -%}

{% comment %} Security Code - hides section when app uninstalled {% endcomment %}
{%- unless content_for_header contains 'design_packs_file.js' -%}
  {%- if request.design_mode -%}
    <div class="dsgn-pck__no-app-warning">
      <div class="dsgn-pck__no-app-warning-background">
      </div>
      <div class="dsgn-pck__no-app-warning-text dsgn-pck__rte">
        <p><strong>WARNING!</strong> This premium section will not display properly without an active subscription for <a href="https://apps.shopify.com/design-packs" target="_blank" rel="nofollow">Design Packs</a>. If you need any support please email <a href="mailto:info@design-packs.com" target="_blank">info@design-packs.com</a> with your questions.</p>
      </div>
    </div>
  {%- endif -%}
  {%- break -%}
{%- endunless -%}

{%- comment -%} Layout: has user entered measurement value into max-width field? {%- endcomment -%}
{%- if section.settings.max_width contains 'px' or section.settings.max_width contains '%' -%}
  {%- assign max_width = section.settings.max_width -%}
{%- else -%}
  {%- assign max_width = section.settings.max_width | append: 'px' -%}
{%- endif -%}

{%- comment -%} Text: custom font_picker values {%- endcomment -%}
{%- capture font_settings_list -%}
{{ section.settings.main_font | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'weight', 'normal' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}
{%- endcapture -%}
{%- assign font_array = font_settings_list | split: '~' -%}

{%- capture minify -%}
{%- comment -%} CSS {%- endcomment -%}
<style>
/*! Flickity v2.2.2
https://flickity.metafizzy.co
---------------------------------------------- */
.flickity-enabled{position:relative}.flickity-enabled:focus{outline:0;box-shadow: none;}.flickity-viewport{overflow:hidden;position:relative;height:100%}.flickity-slider{position:absolute;width:100%;height:100%}.flickity-enabled.is-draggable{-webkit-tap-highlight-color:transparent;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.flickity-enabled.is-draggable .flickity-viewport{cursor:move;cursor:-webkit-grab;cursor:grab}.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down{cursor:-webkit-grabbing;cursor:grabbing}.flickity-button{position:absolute;background:hsla(0,0%,100%,.75);border:none;color:#333}.flickity-button:hover{background:#fff;cursor:pointer}.flickity-button:focus{outline:0;box-shadow:0 0 0 5px #19f}.flickity-button:active{opacity:.6}.flickity-button:disabled{opacity:.3;cursor:auto;pointer-events:none}.flickity-button-icon{fill:currentColor}.flickity-prev-next-button{top:50%;width:44px;height:44px;border-radius:50%;transform:translateY(-50%)}.flickity-prev-next-button.previous{left:10px}.flickity-prev-next-button.next{right:10px}.flickity-rtl .flickity-prev-next-button.previous{left:auto;right:10px}.flickity-rtl .flickity-prev-next-button.next{right:auto;left:10px}.flickity-prev-next-button .flickity-button-icon{position:absolute;left:20%;top:20%;width:60%;height:60%}.flickity-page-dots{position:absolute;width:100%;bottom:-25px;padding:0;margin:0;list-style:none;text-align:center;line-height:1}.flickity-rtl .flickity-page-dots{direction:rtl}.flickity-page-dots .dot{display:inline-block;width:10px;height:10px;margin:0 8px;background:#333;border-radius:50%;opacity:.25;cursor:pointer}.flickity-page-dots .dot.is-selected{opacity:1}

{%- if section.settings.override_theme_font != blank -%}
  {%- for font in font_array -%}
    {%- unless font contains 'error' -%}{{ font }}{%- endunless -%}
  {%- endfor -%}
  {%- capture main_font -%}{{ section.settings.main_font.family }}, {{ section.settings.main_font.fallback_families }}{%- endcapture -%}
  {%- capture heading_font -%}{{ section.settings.heading_font.family }}, {{ section.settings.heading_font.fallback_families }}{%- endcapture -%}
{%- endif -%}

#DP--{{ section.id }} {
  background: {{ section.settings.background_color }};
  margin-top: {{ section.settings.outer_margin }}px;
  margin-bottom: {{ section.settings.outer_margin }}px;
}

#DP--{{ section.id }} .dsgn-pck__sizer {
  padding-top: {{ section.settings.inner_padding }}px;
  padding-bottom: {{ section.settings.inner_padding }}px;
  width: {{ section.settings.base_width }}%;
  max-width: {{ max_width }};
}

#DP--{{ section.id }} .collection__button-wrapper {
  display: flex;
  justify-content: center;
  margin-bottom: 30px;
  /*gap: 20px;*/
  flex-wrap: wrap;
}

#DP--{{ section.id }} .dsgn-pck__collection-title {
  position: relative;
  border: none;
  background: transparent;
  padding: 0;
  padding-bottom: 5px;
  line-height: calc(3px + 2ex + 3px);
  color: {{ section.settings.heading_color }};
  font-size: calc(var(--dp-g-small-heading-size, var(--dp-small-heading-size, 25px)) * {{ section.settings.text_size | times: 0.008 }});
  cursor: pointer;
  {%- if section.settings.override_theme_font != blank -%}
    font-family: {{ heading_font }};
    font-weight: {{ section.settings.heading_font.weight }};
    font-style: {{ section.settings.heading_font.style }};
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__collection-title::after {
  content: '';
  position: absolute;
  display: block;
  height: 1px;
  width: 0;
  left: 0;
  top: 100%;
  background-color: {{ section.settings.heading_color }};
  transition: width 0.3s;
}

#DP--{{ section.id }} .dsgn-pck__collection-title[aria-selected="true"]::after {
  width: 100%;
  /*z-index: -122 !important;*/
  display:none;
}

#DP--{{ section.id }} .dsgn-pck__collection-panel {
  width: 90%;
  margin: auto;
}

#DP--{{ section.id }} .dsgn-pck__collection-panel[aria-hidden="false"] {
  display: block;
}

#DP--{{ section.id }} .dsgn-pck__collection-panel[aria-hidden="true"] {
  display: none;
}

#DP--{{ section.id }} .dsgn-pck__collection:after {
  content: 'flickity';
  display: none;
}

#DP--{{ section.id }} .dsgn-pck__item {
  display: block;
  height: auto;
  margin-right: calc( ({{ section.settings.per_row }} * 20px) / ({{ section.settings.per_row }} - 1));
  width: calc(100% / {{ section.settings.per_row }} - 20px);
}

#DP--{{ section.id }} .dsgn-pck__stretch-height .dsgn-pck__flex-item {
  height: 100%;
}

#DP--{{ section.id }} .dsgn-pck__item > a {
  text-decoration: none;
}

#DP--{{ section.id }} .dsgn-pck__image__wrapper {
  display: block;
  align-self: center;
  margin: auto;
  flex: 1 0 {{ section.settings.icon_size }}%;
  max-width: {{ section.settings.icon_size }}%;
}

#DP--{{ section.id }} .dsgn-pck__image__wrapper svg {
  width: 100%;
}

#DP--{{ section.id }} .dsgn-pck__item img {
  width: 100%;
  height: auto;
  object-fit: contain;
  font-size: 0;
}

#DP--{{ section.id }} .dsgn-pck__product-card__image {
  position: relative;
  display: block;
  margin-bottom: 0;
  z-index: 0;
}

#DP--{{ section.id }} .dsgn-pck__product-card__image.dsgn-pack__secondary-image--true:hover .dsgn-pck__product-image__second {
  opacity: 1;
}

#DP--{{ section.id }} .dsgn-pck__product-image__first {
  position: relative;
}

#DP--{{ section.id }} .dsgn-pck__product-image__second {
  opacity: 0;
  z-index: 1;
  position: absolute;
  transition: opacity .2s ease-in-out;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

#DP--{{ section.id }} .dsgn-pck__product-image__second .dsgn-pck__image__wrapper {
  height: 100%;
}

#DP--{{ section.id }} .dsgn-pck__product-image__second img {
  object-fit: cover;
  height: 100%;
}

#DP--{{ section.id }} .dsgn-pck__product-card {
  position: relative;
}

#DP--{{ section.id }} .dsgn-pck__product-card__info {
  width: 100%;
  padding: 0.5em;
  {%- if section.settings.override_theme_font != blank -%}
    font-family: {{ main_font }};
    font-weight: {{ section.settings.main_font.weight }};
    font-style: {{ section.settings.main_font.style }};
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__product-card__info p {
  color: {{ section.settings.text_color }};
  margin-top: 5px;
  margin-bottom: 5px;
  line-height: calc(3px + 2ex + 3px);
  font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.008 }});
}

#DP--{{ section.id }} .dsgn-pck__product-card__info:hover .dsgn-pck__product-card__variant-info  {
  opacity: 1;
}

#DP--{{ section.id }} .dsgn-pck__product-card:hover .dsgn-pck__product-card__info  {
  opacity: 1;
  z-index: 1;
}

#DP--{{ section.id }} .dsgn-pck__product-tag {
  z-index: 2;
  position: absolute;
  top: 5px;
  right: 8px;
  text-transform: uppercase;
  color: {{ section.settings.text_color }};
  {%- if section.settings.override_theme_font != blank -%}
  font-family: {{ main_font }};
  font-weight: {{ section.settings.main_font.weight }};
  font-style: {{ section.settings.main_font.style }};
  {%- endif -%}
  font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.008 }});
}

#DP--{{ section.id }} .dsgn-pck__product .dsgn-pck__product-money_was-price {
  text-decoration: line-through;
  color: {{ section.settings.text_color | color_modify: 'alpha', 0.5 }};
}

#DP--{{ section.id }} .flickity-button {
  background: transparent;
  color: {{ section.settings.heading_color }};
  transition: all 0.3s ease-in-out;
}

#DP--{{ section.id }} .flickity-button:disabled {
  display: none;
}

#DP--{{ section.id }} .flickity-prev-next-button.next {
  right: -40px;
}

#DP--{{ section.id }} .flickity-prev-next-button.previous {
  left: -40px;
}

{%- if section.settings.custom_css != blank -%}
  {%- assign custom_section_declarations = section.settings.custom_css | split: '}' -%}
  {%- for declaration in custom_section_declarations -%}
    {%- if declaration contains '{' -%}
      #DP--{{ section.id }} {{ declaration }} }
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

/* Landscape phone to portrait tablet */
@media (max-width: 767px) {

  #DP--{{ section.id }} .flickity-button {
    display: none;
  }

  #DP--{{ section.id }} .dsgn-pck__item {
    margin: 0 10px;
    width: 50%;
  }

  #DP--{{ section.id }} .dsgn-pck__collection {
    display: flex;
    flex-wrap: nowrap;
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
    overflow-y: hidden;
    justify-content: flex-start;
    scroll-snap-type: x mandatory;
  }

  #DP--{{ section.id }} .dsgn-pck__collection:after {
    content: '';
  }

  #DP--{{ section.id }} .dsgn-pck__item {
    min-width: 60vw;
    scroll-snap-align: center;
    position: relative;
  }

  #DP--{{ section.id }} .dsgn-pck__item:first-child {
    margin-left: 10vw;
  }

  #DP--{{ section.id }} .dsgn-pck__collection-panel {
    width: 100%;
  }

  #DP--{{ section.id }} .dsgn-pck__product-card__info  {
    opacity: 1;
    z-index: 1;
  }

}

/* Landscape phones and down */
@media (max-width: 480px) {
  #DP--{{ section.id }} {
    margin-top: {{ section.settings.outer_margin | divided_by: 2 }}px;
    margin-bottom: {{ section.settings.outer_margin | divided_by: 2 }}px;
  }

  #DP--{{ section.id }} .dsgn-pck__sizer {
    min-width: 100%;
    padding-top: {{ section.settings.inner_padding | divided_by: 2 }}px;
    padding-bottom: {{ section.settings.inner_padding | divided_by: 2 }}px;
  }

  {%- if section.settings.mobile_custom_css != blank -%}
    {%- assign mobile_custom_declarations = section.settings.mobile_custom_css | split: '}' -%}
    {%- for declaration in mobile_custom_declarations -%}
      {%- if declaration contains '{' -%}
        #DP--{{ section.id }} {{ declaration }} }
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
}


  
</style>

{%- comment -%} HTML {%- endcomment -%}
<section id="DP--{{ section.id }}" class="{{ section.settings.extra_class }} DP--{{ section.id }} dsgn-pck__collection-slider dsgn-pck__section">
  <div class="dsgn-pck__sizer">
    <div class="collection__button-wrapper">
      {%- for block in section.blocks -%}
        {%- assign collection = collections[block.settings.collection] -%}
        {%- if collection != blank -%}
          <button class="dsgn-pck__collection-title rq-featured-col-bg-color{{ block.id }}" data-dsgn-pck-tab="{{ block.id }}" role="tab" aria-selected="{%- if forloop.first -%}true{%- else -%}false{%- endif -%}">
            {{ block.settings.title | default: collection.title }}
          </button>
          <style>
           .rq-featured-col-bg-color{{ block.id }}[aria-selected="true"] {
             background-color:  {{block.settings.bg_color}} !important;
             color:  {{block.settings.heading_color}} !important;
             z-index: 9;
           } 
          </style>
        {%- endif -%}
      {%- endfor -%}
    </div>
    {%- for block in section.blocks -%}
      {%- assign collection = collections[block.settings.collection] -%}
      {%- if collection != blank -%}
        <div id="DP--{{ block.id }}" class="dsgn-pck__collection-panel" data-dsgn-pck-panel="{{ block.id }}" role="tabpanel" aria-hidden="{%- if forloop.first -%}false{%- else -%}true{%- endif -%}" {{ block.shopify_attributes }}>
          <div id="slider-{{ block.id }}" data-dsgn-pck-slider class="dsgn-pck__collection" data-slider="{{ block.id }}" >
            {%- for product in collection.products limit: block.settings.visible_products -%}
              <div class="dsgn-pck__product dsgn-pck__item">
                <div class="dsgn-pck__product-card">
                  {%- if section.settings.show_product_label -%}
                    {%- if product.available != true -%}
                      <div class="dsgn-pck__product-tag">
                      {{ 'sold_out' | t }}
                      </div>
                    {%- endif -%}
                    {% comment %} Check if product is on sale {% endcomment %}
                    {% if product.available and product.compare_at_price_max > product.price %}
                      <div class="dsgn-pck__product-tag">
                      {{ 'sale' | t }}
                      </div>
                    {% endif %}
                  {%- endif -%}
                  <a class="dsgn-pck__product-card__image {% if product.images[1] != blank %}dsgn-pack__secondary-image--true{% endif %}" href="{{ product.url }}">
                    <div class="dsgn-pck__product-image__first">
                      <div class="dsgn-pck__image__wrapper">
                        <svg viewBox="0 0 {{ product.featured_image.width }} {{ product.featured_image.height }}"></svg>
                        {{ product.featured_image | image_url: width: 2800 | image_tag: loading: 'lazy' }}
                      </div>
                    </div>
                    {%- if product.images[1] != blank -%}
                      <div class="dsgn-pck__product-image__second">
                        <div class="dsgn-pck__image__wrapper">
                          <svg viewBox="0 0 {{ product.images[1].width }} {{ product.images[1].height }}"></svg>
                          {{ product.images[1] | image_url: width: 2800 | image_tag: loading: 'lazy' }}
                        </div>
                      </div>
                    {%- endif -%}
                  </a>
                  <div class="dsgn-pck__product-card__info">
                    {%- if section.settings.show_product_title -%}
                      <p class="dsgn-pck__product-title">{{ product.title }}</p>
                    {%- endif -%}
                    {%- if section.settings.show_product_price -%}
                      <p class="dsgn-pck__product-money">
                        {%- comment -%}
                        <!-- RQ! commented this out -->
                        {{ product.price | money }} 
                        {%- endcomment -%}
                      
                        <!-- RQ! full size bottle price STARTS -->
                        {%- if product.first_available_variant -%}
                            {%- assign price = product.first_available_variant.price -%}
                        {%- else -%}
                            {%- assign price = product.price -%}
                        {%- endif -%}
                        {{ price | money }}
                        <!-- RQ! full size bottle price ENDS -->
                        {% if product.compare_at_price_max > product.price %}
                          <span class="dsgn-pck__product-money_was-price">
                            <span class="money">{{ product.compare_at_price_max | money }}</span>
                          </span>
                        {% endif %}
                      </p>
                    {%- endif -%}
                  </div>
                </div>
              </div>
            {%- endfor -%}
          </div>
          <div class="dsgn-pck__slider-footer dsgn-pck__flex dsgn-pck__justify-center">
            <style>
              {%- assign button_alpha = block.settings.button_background_color | color_extract: 'alpha' -%}
              #DP--{{ block.id }} .dsgn-pck__button {
                display: flex;
                justify-content: center;
                align-items: center;
                text-align: center;
                text-decoration: none;
                padding: 0.5em 1.2em;
                margin-top: 1em;
                border: thin solid;
                transition: all 0.3s ease-in-out;
                border-radius: {{ block.settings.button_radius }}px;
                line-height: calc(3px + 2ex + 3px);
                font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
                {%- if section.settings.override_theme_font != blank -%}
                font-family: {{ main_font }};
                font-weight: {{ section.settings.main_font.weight }};
                font-style: {{ section.settings.main_font.style }};
                {%- endif -%}
                color: {{ block.settings.button_label_color }};
                border-color: {%- if button_alpha != 0 -%}{{ block.settings.button_background_color }}{%- else -%}{{ block.settings.button_label_color }}{%- endif -%};
                background-color: {{ block.settings.button_background_color }};
              }
            </style>
            {%- if block.settings.button_label != blank -%}
              <a href="{{ collection.url }}" class="dsgn-pck__button">
                {{ block.settings.button_label }}
              </a>
            {%- endif -%}
          </div>
        </div>
      {%- endif -%}
    {%- endfor -%}
  </div>
</section>
{%- endcapture -%}
{{ minify | strip_newlines }}

{% schema %}
{
  "name": "Collection - slider",
  "class": "DP__collection-slider",
  "max_blocks": 5,
  "settings": [
    {
      "type": "range",
      "id": "per_row",
      "label": "Products per slide",
      "default": 3,
      "min": 2,
      "max": 6
    },
    {
      "type": "checkbox",
      "id": "show_arrows",
      "label": "Show arrows",
      "default": true
    },
    {
      "type": "header",
      "content": "Products"
    },
    {
      "type": "checkbox",
      "id": "show_product_title",
      "label": "Show title",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_product_price",
      "label": "Show price",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_product_label",
      "label": "Show sold out sticker",
      "default": true
    },
    {
      "type": "header",
      "content": "✏️ Text appearance"
    },
    {
      "type": "range",
      "id": "text_size",
      "label": "Text size",
      "min": 80,
      "max": 150,
      "step": 5,
      "default": 100,
      "unit": "%"
    },
    {
      "type": "header",
      "content": "🎨 Design"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Headings and arrows",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#121212"
    },
    {
      "type": "color_background",
      "id": "background_color",
      "label": "Background",
      "default": "linear-gradient(360deg, rgba(255, 255, 255, 1), rgba(255, 255, 255, 1) 100%)"
    },
    {
      "type": "header",
      "content": "🖼 Layout"
    },
    {
      "type": "range",
      "id": "base_width",
      "label": "Size",
      "min": 80,
      "max": 100,
      "step": 5,
      "default": 95,
      "unit": "%"
    },
    {
      "type": "text",
      "id": "max_width",
      "label": "Maximum width",
      "placeholder": "eg. 1200px",
      "info": "Sets width constraint for content."
    },
    {
      "type": "range",
      "id": "inner_padding",
      "label": "Inner padding",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 40,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "outer_margin",
      "label": "Outer margin",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 0,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "🚨 Advanced"
    },
    {
      "type": "html",
      "id": "custom_css",
      "label": "CSS"
    },
    {
      "type": "html",
      "id": "mobile_custom_css",
      "label": "Mobile CSS",
      "info": "Applied on screens less than 480px."
    },
    {
      "type": "checkbox",
      "id": "override_theme_font",
      "label": "Override default theme font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "heading_font",
      "label": "Headings",
      "default": "serif"
    },
    {
      "type": "font_picker",
      "id": "main_font",
      "label": "Text",
      "default": "sans-serif"
    },
    {
       "type": "text",
       "id": "extra_class",
       "label": "Extra class",
       "info": "One class only. Don't add the period."
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "info": "Defaults to collection title if blank."
        },
        {
           "type": "color",
           "id": "heading_color",
           "label": "Heading color when selected",
           "default": "#000000"
        },
        {
           "type": "color",
           "id": "bg_color",
           "label": "Heading background when selected",
           "default": "#f2695f"
        },
        {
          "type": "range",
          "id": "visible_products",
          "min": 2,
          "max": 50,
          "step": 1,
          "label": "Products to show",
          "default": 8
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button label",
          "default": "View all products"
        },
        {
          "type": "color",
          "id": "button_label_color",
          "label": "Button label",
          "default": "#4B4949"
        },
        {
          "type": "color",
          "id": "button_background_color",
          "label": "Button background",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "range",
          "id": "button_radius",
          "label": "Button border radius",
          "min": 0,
          "max": 50,
          "step": 5,
          "default": 0,
          "unit": "px"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Featured collection - slider 🎒",
      "blocks": [
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        }
      ]
    }
  ],
  "locales": {
    "en": {
      "sold_out": "Sold Out",
      "sale": "Sale"
    }
  }
}
{% endschema %}
{%- comment -%} JSON Settings {%- endcomment -%}
<script type="application/json" data-dsgn-pck="{{ section.id }}">
  {
    "id": {{ section.id | json }},
    "show_arrows": {{ section.settings.show_arrows | json }}
  }
</script>
{%- comment -%} External scripts {%- endcomment -%}
<script data-dsgn-pck-external-js="{{ section.id }}" src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/flickity.pkgd.min.js?v=1634072170"></script>
{%- comment -%} JavaScript {%- endcomment -%}
<script data-dsgn-pck-js="{{ section.id }}">
(function(){

  const designPack = {
    settings: {},
    slider: {},
    updateVisibleSlider: function(e){
      const tab = e.currentTarget;
      const section = document.querySelector(`#DP--${designPack.settings.id}`);
      const tabs = section.querySelectorAll(`[data-dsgn-pck-tab]`);
      const tabPanel = section.querySelector(`[data-dsgn-pck-panel="${tab.dataset.dsgnPckTab}"]`);
      const tabPanels = section.querySelectorAll(`[data-dsgn-pck-panel]`);
      const sliderElem = section.querySelector(`[data-slider="${tab.dataset.dsgnPckTab}"]`);

      tabs.forEach(function(elem){
        elem.setAttribute('aria-selected', false);
      });
      tab.setAttribute('aria-selected', true);

      tabPanels.forEach(function(elem){
        elem.setAttribute('aria-hidden', true);
      });
      tabPanel.setAttribute('aria-hidden', false);

      designPack.slider[sliderElem.id].resize();

    },
    load: function(section){
      const sliders = section.querySelectorAll(`[data-dsgn-pck-slider]`);

      sliders.forEach(function(sliderElem, index){
        designPack.slider[sliderElem.id] = new Flickity( sliderElem, {
          cellAlign: 'center',
          autoPlay: false,
          draggable: true,
          contain: true,
          wrapAround: false,
          adaptiveHeight: false,
          imagesLoaded: true,
          watchCSS: true,
          groupCells: true,
          prevNextButtons: designPack.settings.show_arrows,
          pageDots: false,
          on: {
            ready: () => {
              sliderElem.classList.add('dsgn-pck__stretch-height');
            }
          }
        });
      })


      section.querySelectorAll('[data-dsgn-pck-tab]').forEach(function(tab){
        tab.addEventListener('click', designPack.updateVisibleSlider);
      });

    },
    unload: function(section){
    }
  }

  window.addEventListener('shopify:section:unload', function (e) {
    const settings = document.querySelector(`[data-dsgn-pck="${e.detail.sectionId}"]`);
    const sectionId = e.detail.sectionId;
    const section = document.querySelector(`#DP--${e.detail.sectionId}`);
    if (sectionId == designPack.settings.id){
      designPack.unload(section);
    }
  });

  window.addEventListener('shopify:block:select', function (e) {
    designPack.settings = JSON.parse(document.querySelector('[data-dsgn-pck="{{ section.id }}"]').innerHTML);
    const sectionId = {{ section.id | json }};
    const section = document.querySelector(`#DP--${sectionId}`);

    if (sectionId == designPack.settings.id){
      designPack.load(section);
    }
  });

  designPack.settings = JSON.parse(document.querySelector('[data-dsgn-pck="{{ section.id }}"]').innerHTML);
  const sectionId = {{ section.id | json }};
  const section = document.querySelector(`#DP--${sectionId}`);

  if (sectionId == designPack.settings.id){
    designPack.load(section);
  }
})()
</script>
